---
- name: Importing specific distro variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - vars
    - always

- include_tasks: pki.yml

- name: Add the buildtools repo if needed
  template:
    src: buildtools.repo.j2
    dest: /etc/yum.repos.d/buildtools.repo
  when: kojid_buildtools_repo
  tags:
    - repo

- name: Adding repo gpg key if needed
  copy: 
    src: files/RPM-GPG-KEY-CentOS-Infra 
    dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-Infra
  when: kojid_buildtools_repo and kojid_buildtools_repo_gpgcheck  
  tags:
    - repo

- name: Ensuring koji pkgs are installed
  yum:
    name: "{{ kojid_pkgs }}" 
    state: installed
    update_cache: True
  tags:
    - pkgs
  notify:
    - restart_kojid

- name: Systemd snippet directory
  file:
    path: /etc/systemd/system/kojid.service.d/
    state: directory

- block:
    - name: Configuring kojid environment for proxy
      template:
        src: systemd-kojid-proxy.conf.j2
        dest: /etc/systemd/system/kojid.service.d/proxy.conf
        mode: 0644
      register: kojid_systemd_override
      notify:
        - restart_kojid

    - name: Reloading systemd if needed
      systemd:
        daemon-reload: yes
      when: kojid_systemd_override is changed

  when: kojid_use_proxy
  tags:
    - proxy

- block:
    - name: Ensuring no systemd kojid proxy.conf is present
      file:
        path: /etc/systemd/system/kojid.service.d/proxy.conf
        state: absent
      register: kojid_systemd_override
      notify:
        - restart_kojid

    - name: Reloading systemd if needed
      systemd:
        daemon-reload: yes
      when: kojid_systemd_override is changed

  when: not kojid_use_proxy
  tags:
    - proxy


- block:
    - name: Importing needed keytab for kojid if using kerberos auth
      copy:
        src: "{{ pkistore }}/koji/{{ koji_auth_keytab }}"
        dest: "/etc/kojid/{{ koji_auth_keytab }}"
      notify: restart_kojid

    - include_role:
        name: krb5-client
      when: koji_auth_gssapi_localname
  when: koji_auth_kerberos

- name: Adding/updating more pkgs if we need buildtools repo
  yum:
    name:
      - dnf
      - dnf-plugins-core
      - gpgme
      - rpm
    state: latest
  when: kojid_buildtools_repo

- name: Ensuring custom mockdir path exists if defined
  file:
    path: "{{ kojid_custom_mockdir_path }}"
    state: directory
    owner: root
    group: mock
    mode: '0755'
    setype: var_lib_t
  when:
    - kojid_custom_mockdir
  tags:
    - mock

- name: Configuring kojid
  template:
    src: kojid.conf.j2
    dest: /etc/kojid/kojid.conf
  notify: restart_kojid
  tags:
    - config
    - plugins

- name: Configuring mock site-defaults
  template:
    src: etc/mock/site-defaults.cfg.j2
    dest: /etc/mock/site-defaults.cfg
  tags:
    - config
    - rpmautospec

- name: Adding host on kojihub if needed
  shell: |
    koji list-hosts --quiet|grep -q {{ kojid_pki_client_cert | replace(".crt","") }} && /bin/true || ( koji add-host {{ kojid_pki_client_cert | replace(".crt","") }} {{ ansible_architecture }} ; exit 2)
  register: host_result
  changed_when: host_result.rc == 2
  failed_when: host_result.rc == 1
  become_user: "{{ kojid_hub_user }}"
  delegate_to: "{{ kojid_hub_host }}"
  when: kojid_automatic_host_add
  tags:
    - host

- name: Ensuring kojid is started and enabled
  service:
    name: kojid
    state: started
    enabled: True

# It can be that we'll have to route traffic through specific gateway (especially is null-routed, see below)
- name: Add static route[s] if needed
  shell: 
    cmd: "nmcli con show \"{{ kojid_nmcli_con }}\"|grep ipv4.routes|egrep -q 'ip = {{ item.scm_server }}, nh = {{ item.gateway }}' || (nmcli con mod \"{{ kojid_nmcli_con }}\" +ipv4.routes \"{{ item.scm_server }} {{ item.gateway }}\" && nmcli con up \"{{ kojid_nmcli_con }}\" && exit 2) 
         "
  with_items:
    - "{{ kojid_add_route_to_scm }}"
  when: kojid_add_route_to_scm is defined
  register: addedroute
  changed_when: addedroute.rc == 2
  failed_when: addedroute.rc == 1
  tags:
    - route

- name: Remove static route[s] if needed
  shell: 
    cmd: "nmcli con show \"{{ kojid_nmcli_con }}\"|grep ipv4.routes|egrep -q 'ip = {{ item.scm_server }}, nh = {{ item.gateway }}' || exit 0 && (nmcli con mod \"{{ kojid_nmcli_con }}\" -ipv4.routes \"{{ item.scm_server }} {{ item.gateway }}\" && nmcli con up \"{{ kojid_nmcli_con }}\" && exit 2)
         "
  with_items:
    - "{{ kojid_del_route_to_scm }}"
  when: kojid_del_route_to_scm is defined
  register: deletedroute
  changed_when: deletedroute.rc == 2
  failed_when: deletedroute.rc == 1
  tags:
    - route

# Some packages need a default route defined (not necessarily reachable)
# See: https://bugs.ruby-lang.org/issues/13864
# We can define one that points at localhost to stop any outbound tracffic
# but have a route defined

- name: Modify default route if needed
  shell:
    cmd: "nmcli con show \"{{ kojid_nmcli_con }}\"|grep ipv4.gateway|grep -q 127.0.0.1 || (nmcli con mod \"{{ kojid_nmcli_con }}\" ipv4.gateway 127.0.0.1 && nmcli con up \"{{ kojid_nmcli_con }}\" && exit 2 )
         "
  register: defroute
  changed_when: defroute.rc == 2
  failed_when: defroute.rc == 1
  when: kojid_set_default_nullroute
  tags:
    - route


- block:
    - name: Applying ulimits.conf if needed
      template:
        src: koji-ulimits.conf.j2
        dest: /etc/security/limits.d/koji-ulimits.conf
      notify:
        - restart_kojid
      
    - name: Configuring kojid environment for ulimits
      template:
        src: systemd-kojid-ulimits.conf.j2
        dest: /etc/systemd/system/kojid.service.d/ulimits.conf
        mode: 0644
      register: kojid_systemd_override
      notify:
        - restart_kojid

    - name: Reloading systemd if needed
      systemd:
        daemon-reload: yes
      when: kojid_systemd_override is changed

  when: kojid_ulimits_conf
  tags:
    - ulimits

- name: Configuring system-wide git proxy
  template:
    src: etc/gitconfig.j2
    dest: /etc/gitconfig
    owner: root
    group: root
    mode: '0755'
  when: kojid_scm_use_proxy
  tags:
    - proxy

- block:
    - name: Configuring zabbix agent
      include_role:
        name: zabbix-server
        tasks_from: agent_config
      vars:
        zabbix_templates: "{{ zabbix_kojid_templates }}"
        zabbix_groups: "{{ zabbix_kojid_groups }}"
  delegate_to: "{{ zabbix_api_srv }}"  
  tags:
    - monitoring
  when: 
    - zabbix_api_srv is defined
    - zabbix_monitoring

- name: Distribute filestore plugins
  copy: 
    src: "{{ filestore }}/koji/{{ item }}"
    dest: "/usr/lib/koji-builder-plugins/{{ item }}"
  with_items: "{{ kojid_filestore_plugins }}"
  when: kojid_filestore_plugins is defined

- name: Include plugins tasks
  include_tasks: plugins.yml
  when: kojid_plugins
  tags:
    - plugins

- name: Include rpmautospec plugin
  yum:
    name: "{{ mock_rpmautospec_pkg }}"
    state: installed
  when: kojid_rpmautospec
  tags:
    - rpmautospec

- name: Setting up nfs mount
  include_tasks: nfs.yml
  when: koji_nfs_mount
  tags:
    - nfs

- name: Including compose task when needed
  include_tasks: compose.yml
  when: kojid_compose_user
  tags:
    - compose

- name: Including image builder tasks when needed
  include_tasks: image.yml
  when: kojid_image_builder
  tags:
    - image

- block:
    - name: Distribute kojid TLS validity check script
      template:
        src: kojid-tls-check.j2
        dest: /usr/libexec/centos/kojid-tls-check
        mode: '0750'
        owner: root
    - name: Reporting TLS validity value to zabbix
      cron:
        name: kojid tls cert check
        job: /usr/libexec/centos/kojid-tls-check
        minute: '*/30'
  when: koji_auth_tls
  tags:
    - monitoring
