# This file is managed by puppet, don't change it
[kojid]

; The number of seconds to sleep between tasks
sleeptime=15

; The maximum number of jobs that kojid will handle at a time
maxjobs={{ kojid_maxjobs }}

; The minimum amount of free space (in MBs) required for each build root
minspace={{ kojid_minspace }}

; The directory root where work data can be found from the koji hub
topdir=/mnt/koji

; The directory root for temporary storage
workdir=/tmp/koji

; The directory root for mock
mockdir=/var/lib/mock

; The user to run as when doing builds
mockuser=kojibuilder

; The vendor to use in rpm headers
; vendor=Koji
vendor={{ kojid_vendor }}

; The packager to use in rpm headers
; packager=Koji
packager={{ kojid_packager }}

; The distribution to use in rpm headers
; distribution=Koji
distribution={{ kojid_distribution }}

; The _host string to use in mock
; mockhost=koji-linux-gnu
mockhost=redhat-linux-gnu

; Timeout for build duration (24 hours)
; rpmbuild_timeout=86400

; The URL for the xmlrpc server
server={{ kojid_xmlrpc_url }}

; The URL for the file access
topurl={{ kojid_kojifiles_url }}

; use createrepo_c rather than createrepo
use_createrepo_c=True

; A space-separated list of hostname:repository[:use_common] tuples that kojid is authorized to checkout from (no quotes).
; Wildcards (as supported by fnmatch) are allowed.
; If use_common is specified and is one of "false", "no", "off", or "0" (without quotes), then kojid will not attempt to checkout
; a common/ dir when checking out sources from the source control system.  Otherwise, it will attempt to checkout a common/
; dir, and will raise an exception if it cannot.
allowed_scms={{ kojid_allowed_scms }}

; The mail host to use for sending email notifications
smtphost=example.com

; The From address used when sending email notifications
from_addr=Koji Build System <buildsys@example.com>

;configuration for Kerberos authentication

;the format of the principal used by the build hosts
;%s will be replaced by the FQDN of the host
;host_principal_format = compile/%s@EXAMPLE.COM

;location of the keytab
;keytab = /etc/kojid/kojid.keytab

;the service name of the principal being used by the hub
;krbservice = host

;configuration for SSL authentication

;client certificate
cert = /etc/pki/koji/{{ inventory_hostname}}.pem

;certificate of the CA that issued the client certificate
ca = /etc/pki/koji/{{ kojid_pki_cacert }}

;certificate of the CA that issued the HTTP server certificate
{% if kojid_serverca_bundle %}
serverca = /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt
{% else %}
serverca = /etc/pki/koji/{{ kojid_serverca }}
{% endif %}

;if set to True, failing subtask will not automatically cancel other siblings
;build_arch_can_fail = False

{% if kojid_runroot_builder %}
plugins = runroot
{% endif %}
